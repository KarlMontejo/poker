{"ast":null,"code":"var _jsxFileName = \"/home/karlmontejo/Poker_Game/frontend/poker-react-app/src/components/PokerGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokerGame() {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  useEffect(() => {\n    console.log(\"Fetching game data...\");\n    fetch('/api/start-game', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        num_opponents: 5,\n        opp_difficulty: 'medium'\n      })\n    }).then(response => {\n      var _response$headers$get;\n      if ((_response$headers$get = response.headers.get(\"content-type\")) !== null && _response$headers$get !== void 0 && _response$headers$get.includes(\"application/json\")) {\n        return response.json();\n      }\n      throw new Error('Received non-JSON response from server');\n    }).then(data => {\n      console.log(\"Data received:\", data);\n      setGameState(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []);\n  const handlePlayerAction = (id, action) => {\n    console.log(`Player ${id} action: ${action}`);\n    fetch('/api/player-action', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        player_id: id,\n        action: action\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(`Player ${id} action: ${action}`);\n      setGameState(data);\n    }).catch(error => {\n      console.error('Error:', error);\n      console.log(\"Action error data:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poker-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players\",\n      children: gameState && gameState.players ? gameState.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Player \", player.id, \": \", player.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", player.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading players...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerAction(0, 'fold'),\n        children: \"Fold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerAction(0, 'call'),\n        children: \"Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerAction(0, 'raise'),\n        children: \"Raise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(PokerGame, \"oBlRs/Y9H9l2tlMNEmPjMmn94yU=\");\n_c = PokerGame;\nexport default PokerGame;\nvar _c;\n$RefreshReg$(_c, \"PokerGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PokerGame","_s","gameState","setGameState","console","log","fetch","method","headers","body","JSON","stringify","num_opponents","opp_difficulty","then","response","_response$headers$get","get","includes","json","Error","data","catch","error","handlePlayerAction","id","action","player_id","className","children","players","map","player","index","name","fileName","_jsxFileName","lineNumber","columnNumber","status","onClick","_c","$RefreshReg$"],"sources":["/home/karlmontejo/Poker_Game/frontend/poker-react-app/src/components/PokerGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction PokerGame() {\n  const [gameState, setGameState] = useState(null);\n\n  useEffect(() => {\n    console.log(\"Fetching game data...\");\n    fetch('/api/start-game', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n          num_opponents: 5,\n          opp_difficulty: 'medium',\n      })\n  })\n  .then(response => {\n      if (response.headers.get(\"content-type\")?.includes(\"application/json\")) {\n          return response.json();\n      }\n      throw new Error('Received non-JSON response from server');\n  })\n  .then(data => {\n      console.log(\"Data received:\", data);\n      setGameState(data);\n  })\n  .catch(error => {\n      console.error('Error:', error);\n  });\n  \n  }, []);\n\n  const handlePlayerAction = (id, action) => {\n    console.log(`Player ${id} action: ${action}`);\n    fetch('/api/player-action', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        player_id: id,\n        action: action \n      })\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(`Player ${id} action: ${action}`);\n      setGameState(data);\n    })\n    .catch(error => {\n      console.error('Error:', error);\n      console.log(\"Action error data:\", error);\n    });\n  };\n\n  return (\n    <div className=\"poker-table\">\n      <div className=\"players\">\n        {gameState && gameState.players ? (\n          gameState.players.map((player, index) => (\n            <div key={index} className=\"player\">\n              <p>Player {player.id}: {player.name}</p>\n              <p>Status: {player.status}</p>\n            </div>\n          ))\n        ) : (\n          <p>Loading players...</p>\n        )}\n      </div>\n      <div className=\"actions\">\n        <button onClick={() => handlePlayerAction(0, 'fold')}>Fold</button>\n        <button onClick={() => handlePlayerAction(0, 'call')}>Call</button>\n        <button onClick={() => handlePlayerAction(0, 'raise')}>Raise</button>\n      </div>\n    </div>\n  );\n}\n\nexport default PokerGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}