{"ast":null,"code":"var _jsxFileName = \"/home/karlmontejo/Poker_Game/frontend/poker-react-app/src/components/PokerGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokerGame() {\n  _s();\n  useEffect(() => {\n    console.log(\"Fetching game data...\");\n    fetch('/api/start-game', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        num_opponents: numOpponents,\n        opp_difficulty: oppDifficulty\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(\"Data received:\", data);\n      setGameState(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, [numOpponents, oppDifficulty]);\n  const handlePlayerAction = (id, action) => {\n    console.log(`Player ${id} action: ${action}`);\n    fetch('/api/player-action', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        player_id: id,\n        action: action\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(\"Action data received:\", data);\n      setGameState(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poker-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players\",\n      children: gameState && gameState.players ? gameState.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Player \", player.id, \": \", player.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", player.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading players...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerAction(0, 'fold'),\n        children: \"Fold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerAction(0, 'call'),\n        children: \"Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerAction(0, 'raise'),\n        children: \"Raise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(PokerGame, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PokerGame;\nexport default PokerGame;\nvar _c;\n$RefreshReg$(_c, \"PokerGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PokerGame","_s","console","log","fetch","method","headers","body","JSON","stringify","num_opponents","numOpponents","opp_difficulty","oppDifficulty","then","response","ok","Error","json","data","setGameState","catch","error","handlePlayerAction","id","action","player_id","className","children","gameState","players","map","player","index","name","fileName","_jsxFileName","lineNumber","columnNumber","status","onClick","_c","$RefreshReg$"],"sources":["/home/karlmontejo/Poker_Game/frontend/poker-react-app/src/components/PokerGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction PokerGame() {\n  useEffect(() => {\n    console.log(\"Fetching game data...\");\n    fetch('/api/start-game', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            num_opponents: numOpponents,\n            opp_difficulty: oppDifficulty,\n        })\n    })\n    .then(response => {\n        if (!response.ok) {\n            throw new Error('Network response was not ok');\n        }\n        return response.json();\n    })\n    .then(data => {\n        console.log(\"Data received:\", data);\n        setGameState(data);\n    })\n    .catch(error => {\n        console.error('Error:', error);\n    });\n}, [numOpponents, oppDifficulty]);\n\n    const handlePlayerAction = (id, action) => {\n        console.log(`Player ${id} action: ${action}`);\n        fetch('/api/player-action', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                player_id: id,\n                action: action \n            })\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(\"Action data received:\", data);\n            setGameState(data);\n        })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n    };\n\n    return (\n        <div className=\"poker-table\">\n            <div className=\"players\">\n                {gameState && gameState.players ? (\n                    gameState.players.map((player, index) => (\n                        <div key={index} className=\"player\">\n                            <p>Player {player.id}: {player.name}</p>\n                            <p>Status: {player.status}</p>\n                        </div>\n                    ))\n                ) : (\n                    <p>Loading players...</p>\n                )}\n            </div>\n            <div className=\"actions\">\n                <button onClick={() => handlePlayerAction(0, 'fold')}>Fold</button>\n                <button onClick={() => handlePlayerAction(0, 'call')}>Call</button>\n                <button onClick={() => handlePlayerAction(0, 'raise')}>Raise</button>\n            </div>\n        </div>\n    );\n}\n\nexport default PokerGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}