{"ast":null,"code":"var _jsxFileName = \"/home/karlmontejo/Poker_Game/frontend/poker-react-app/src/components/PokerGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokerGame() {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  useEffect(() => {\n    // fetch initial game state when component mounts\n    fetch('/api/start-game', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        num_opponents: 3,\n        opp_difficulty: 'medium',\n        game_speed: 'normal'\n      })\n    }).then(response => {\n      response.json();\n    }).then(data => setGameState(data)).catch(error => console.error('Error:', error));\n  }, []);\n  const handlePlayerAction = action => {\n    // make API request to perform player action\n    fetch('/api/player-action', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        player_id: 1,\n        // player ID\n        action: action // player action (fold, check, call, bet, raise)\n      })\n    }).then(response => response.json()).then(data => setGameState(data)).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePlayerAction('fold'),\n      children: \"Fold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePlayerAction('call'),\n      children: \"Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePlayerAction('raise'),\n      children: \"Raise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(PokerGame, \"oBlRs/Y9H9l2tlMNEmPjMmn94yU=\");\n_c = PokerGame;\nexport default PokerGame;\nvar _c;\n$RefreshReg$(_c, \"PokerGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PokerGame","_s","gameState","setGameState","fetch","method","headers","body","JSON","stringify","num_opponents","opp_difficulty","game_speed","then","response","json","data","catch","error","console","handlePlayerAction","action","player_id","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/karlmontejo/Poker_Game/frontend/poker-react-app/src/components/PokerGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction PokerGame() {\n  const [gameState, setGameState] = useState(null);\n\n  useEffect(() => {\n    // fetch initial game state when component mounts\n    fetch('/api/start-game', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        num_opponents: 3,\n        opp_difficulty: 'medium',\n        game_speed: 'normal'\n      })\n    })\n    .then(response => {response.json()})\n    .then(data => setGameState(data))\n    .catch(error => console.error('Error:', error));\n  }, []);\n\n  const handlePlayerAction = (action) => {\n    // make API request to perform player action\n    fetch('/api/player-action', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        player_id: 1, // player ID\n        action: action // player action (fold, check, call, bet, raise)\n      })\n    })\n    .then(response => response.json())\n    .then(data => setGameState(data))\n    .catch(error => console.error('Error:', error));\n  };\n\n  return (\n    <div>\n      {/* render game state and UI based on the gameState */}\n      <button onClick={() => handlePlayerAction('fold')}>Fold</button>\n      <button onClick={() => handlePlayerAction('call')}>Call</button>\n      <button onClick={() => handlePlayerAction('raise')}>Raise</button>\n    </div>\n  );\n}\n\nexport default PokerGame;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,iBAAiB,EAAE;MACvBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,aAAa,EAAE,CAAC;QAChBC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAC;IACH,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;MAACA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAAA,CAAC,CAAC,CACnCF,IAAI,CAACG,IAAI,IAAIb,YAAY,CAACa,IAAI,CAAC,CAAC,CAChCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACjD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,kBAAkB,GAAIC,MAAM,IAAK;IACrC;IACAjB,KAAK,CAAC,oBAAoB,EAAE;MAC1BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBa,SAAS,EAAE,CAAC;QAAE;QACdD,MAAM,EAAEA,MAAM,CAAC;MACjB,CAAC;IACH,CAAC,CAAC,CACDR,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIb,YAAY,CAACa,IAAI,CAAC,CAAC,CAChCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACjD,CAAC;EAED,oBACEnB,OAAA;IAAAwB,QAAA,gBAEExB,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMJ,kBAAkB,CAAC,MAAM,CAAE;MAAAG,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChE7B,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMJ,kBAAkB,CAAC,MAAM,CAAE;MAAAG,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChE7B,OAAA;MAAQyB,OAAO,EAAEA,CAAA,KAAMJ,kBAAkB,CAAC,OAAO,CAAE;MAAAG,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV;AAAC3B,EAAA,CA9CQD,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAgDlB,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}