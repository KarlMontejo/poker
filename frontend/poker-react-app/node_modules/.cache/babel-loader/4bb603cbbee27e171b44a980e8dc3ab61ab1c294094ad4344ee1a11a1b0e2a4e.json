{"ast":null,"code":"var _jsxFileName = \"/home/karlmontejo/Poker_Game/frontend/poker-react-app/src/components/PokerGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PokerGame() {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  useEffect(() => {\n    // fetch initial game state when component mounts\n    fetch('/api/start-game', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        num_opponents: 3,\n        opp_difficulty: 'medium',\n        game_speed: 'normal'\n      })\n    }).then(response => response.json()).then(data => setGameState(data)).catch(error => console.error('Error:', error));\n  }, []);\n  const handlePlayerAction = action => {\n    // make API request to perform player action\n    fetch('/api/player-action', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        player_id: 1,\n        // player ID\n        action: action // player action (fold, check, call, bet, raise)\n      })\n    }).then(response => response.json()).then(data => setGameState(data)).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"poker-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Poker Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players\",\n      children: gameState && gameState.players ? gameState.players.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Player \", player.id, \": \", player.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", player.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading players...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerAction('fold'),\n        children: \"Fold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerAction('call'),\n        children: \"Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePlayerAction('raise'),\n        children: \"Raise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(PokerGame, \"oBlRs/Y9H9l2tlMNEmPjMmn94yU=\");\n_c = PokerGame;\nexport default PokerGame;\nvar _c;\n$RefreshReg$(_c, \"PokerGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PokerGame","_s","gameState","setGameState","fetch","method","headers","body","JSON","stringify","num_opponents","opp_difficulty","game_speed","then","response","json","data","catch","error","console","handlePlayerAction","action","player_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","players","map","player","index","id","name","status","onClick","_c","$RefreshReg$"],"sources":["/home/karlmontejo/Poker_Game/frontend/poker-react-app/src/components/PokerGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction PokerGame() {\n  const [gameState, setGameState] = useState(null);\n\n  useEffect(() => {\n    // fetch initial game state when component mounts\n    fetch('/api/start-game', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        num_opponents: 3,\n        opp_difficulty: 'medium',\n        game_speed: 'normal'\n      })\n    })\n    .then(response => response.json())\n    .then(data => setGameState(data))\n    .catch(error => console.error('Error:', error));\n  }, []);\n\n  const handlePlayerAction = (action) => {\n    // make API request to perform player action\n    fetch('/api/player-action', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        player_id: 1, // player ID\n        action: action // player action (fold, check, call, bet, raise)\n      })\n    })\n    .then(response => response.json())\n    .then(data => setGameState(data))\n    .catch(error => console.error('Error:', error));\n  };\n\n  return (\n    <div className=\"poker-table\">\n      <h1>Poker Game</h1>\n      <div className=\"players\">\n        {gameState && gameState.players ? (\n          gameState.players.map((player, index) => (\n            <div key={index} className=\"player\">\n              <p>Player {player.id}: {player.name}</p>\n              <p>Status: {player.status}</p>\n            </div>\n          ))\n        ) : (\n          <p>Loading players...</p>\n        )}\n      </div>\n      <div className=\"actions\">\n        <button onClick={() => handlePlayerAction('fold')}>Fold</button>\n        <button onClick={() => handlePlayerAction('call')}>Call</button>\n        <button onClick={() => handlePlayerAction('raise')}>Raise</button>\n      </div>\n    </div>\n  );\n}\n\nexport default PokerGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}